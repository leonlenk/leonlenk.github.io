---
import Globals from "../globals/globals.astro";
---

<Globals />
<div id="navContainer" class="navContainer">
  <div class="navContent">
    <!-- Hamburger Menu Button (visible only on mobile) -->
    <button
      id="hamburger-btn"
      class="hamburger"
      aria-label="Toggle menu"
      aria-expanded="false"
    >
      <span></span>
      <span></span>
      <span></span>
    </button>

    <!-- Navigation Links -->
    <ul id="nav-links">
      <li><a href="/">Home</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/portfolio">Portfolio</a></li>
      <li><a href="/connect">Connect</a></li>
      <li><a href="/abyss">Abyss</a></li>
    </ul>
  </div>
</div>

<script>
  // Performance-optimized navbar implementation
  (function() {
    'use strict';
    
    // Cache DOM elements
    let navContainer = null;
    let hamburgerBtn = null;
    let navLinks = null;
    let lastScrollY = 0;
    let scrollThrottle = null;
    let isInitialized = false;
    
    function initNavbar() {
      if (isInitialized) return;
      
      navContainer = document.getElementById("navContainer");
      hamburgerBtn = document.getElementById("hamburger-btn");
      navLinks = document.getElementById("nav-links");
      
      if (!navContainer) return;
      
      // Add event listeners
      if (hamburgerBtn) {
        hamburgerBtn.addEventListener("click", toggleMenu, { passive: true });
      }
      
      if (navLinks) {
        navLinks.addEventListener("click", handleLinkClick, { passive: true });
      }
      
      // Throttled scroll handler
      window.addEventListener("scroll", handleScroll, { passive: true });
      
      // Reset state on Astro page transitions
      document.addEventListener("astro:after-swap", resetNavbar);
      
      isInitialized = true;
    }
    
    function toggleMenu() {
      if (!navContainer || !hamburgerBtn) return;
      
      const isExpanded = hamburgerBtn.getAttribute("aria-expanded") === "true";
      navContainer.classList.toggle("is-open");
      hamburgerBtn.setAttribute("aria-expanded", !isExpanded);
    }
    
    function handleLinkClick(event) {
      if (!navContainer || event.target.tagName !== "A") return;
      
      if (navContainer.classList.contains("is-open")) {
        toggleMenu();
      }
    }
    
    function handleScroll() {
      if (scrollThrottle) return;
      
      scrollThrottle = requestAnimationFrame(() => {
        if (!navContainer) return;
        
        // Don't hide navbar if mobile menu is open
        if (navContainer.classList.contains("is-open")) {
          scrollThrottle = null;
          return;
        }
        
        const currentScrollY = window.scrollY;
        const navHeight = navContainer.offsetHeight;
        const scrollThreshold = navHeight;
        
        // Show navbar at top of page
        if (currentScrollY === 0) {
          navContainer.classList.remove("hide-nav");
          lastScrollY = currentScrollY;
          scrollThrottle = null;
          return;
        }
        
        // Hide/show based on scroll direction
        if (currentScrollY > lastScrollY) {
          if (currentScrollY > scrollThreshold) {
            navContainer.classList.add("hide-nav");
          }
        } else {
          navContainer.classList.remove("hide-nav");
        }
        
        lastScrollY = currentScrollY;
        scrollThrottle = null;
      });
    }
    
    function resetNavbar() {
      if (!navContainer) return;
      
      lastScrollY = 0;
      navContainer.classList.remove("hide-nav");
      navContainer.classList.remove("is-open");
      
      if (hamburgerBtn) {
        hamburgerBtn.setAttribute("aria-expanded", "false");
      }
      
      if (scrollThrottle) {
        cancelAnimationFrame(scrollThrottle);
        scrollThrottle = null;
      }
    }
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initNavbar);
    } else {
      initNavbar();
    }
    
    // Cleanup on page unload
    window.addEventListener('beforeunload', () => {
      if (scrollThrottle) {
        cancelAnimationFrame(scrollThrottle);
      }
    });
    
  })();
</script>

<style lang="scss">
  .navContainer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    box-sizing: border-box;
    z-index: 1000;
    padding: 20px 0;
    background: rgba(10, 10, 30, 0.5);
    backdrop-filter: blur(6px);
    -webkit-backdrop-filter: blur(6px);
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
    box-shadow: 0 2px 15px rgba(98, 0, 255, 0.08);
    transition: transform 0.3s ease-out;
  }

  .navContainer.hide-nav {
    transform: translateY(-100%);
  }

  .navContent {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0 20px;
  }

  .navContent ul {
    list-style: none;
    justify-content: center;
    padding: 0;
    margin: 0;
    display: flex;
    gap: 60px;
    transition: all 0.3s ease-in-out;
  }

  .navContent li a {
    font-family: "Lora", serif;
    font-size: 1.2em;
    color: #d1ade6;
    text-decoration: none;
    text-shadow: 0 0 5px rgba(173, 216, 230, 0.5);
    transition:
      color 0.3s ease,
      text-shadow 0.3s ease;
    white-space: nowrap;
  }

  .navContent li a:hover {
    color: #ffffff;
    text-shadow: 0 0 15px rgba(255, 255, 255, 0.9);
  }

  // --- Hamburger Menu Styles (Hidden on Desktop) ---
  .hamburger {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1010;
    position: relative;

    span {
      width: 2rem;
      height: 0.25rem;
      background: #d1ade6;
      border-radius: 10px;
      transition: all 0.3s linear;
      position: relative;
      transform-origin: 1px;
    }
  }

  // --- Mobile Styles ---
  @media (max-width: 868px) {
    .navContent {
      flex-wrap: wrap;
      justify-content: flex-end;
    }

    .hamburger {
      display: flex;
    }

    #nav-links {
      display: none; // Hide by default
      flex-direction: column; // Stack links vertically
      flex-basis: 100%; // Take up the full width
      align-items: center;
      gap: 25px;
      // Add padding to create space between hamburger and the first link
      padding-top: 30px;
      padding-bottom: 10px;
    }

    // --- Active State for Mobile Menu ---
    .navContainer.is-open {
      #nav-links {
        display: flex;
      }

      // Animate hamburger to an 'X'
      .hamburger span:nth-of-type(1) {
        transform: rotate(45deg);
      }
      .hamburger span:nth-of-type(2) {
        opacity: 0;
        transform: translateX(20px);
      }
      .hamburger span:nth-of-type(3) {
        transform: rotate(-45deg);
      }
    }
  }
</style>
